;;; Custom builds *****************************************************
; Use either the plugins defined in                                   ;
; pre_custom_esp82xx.py or Custom.h                                   ;
; *********************************************************************
[limited_build_size]
build_flags               = -DNO_GLOBAL_MDNS



[hard_esp82xx]
lib_ignore                = ${core_stage.lib_ignore}
platform                  = ${core_stage.platform}
platform_packages         = ${core_stage.platform_packages}
build_flags               = ${core_stage.build_flags}
                            -DBUILD_NO_DEBUG
                            -DPLUGIN_BUILD_CUSTOM
                            -DFEATURE_DEFINE_SERIAL_CONSOLE_PORT=0
extra_scripts             = ${extra_scripts_esp8266.extra_scripts}
                            ${core_stage.extra_scripts}


[esp8266_custom_common_274]
build_flags               = ${core_2_7_4.build_flags}
platform                  = ${core_2_7_4.platform}
platform_packages         = ${core_2_7_4.platform_packages}
lib_ignore                = ESP32_ping
                            ESP32WebServer
                            ESP32HTTPUpdateServer
                            ServoESP32
                            ${no_ir.lib_ignore}
                            TinyWireM
                            I2C AXP192 Power management
                            EspSoftwareSerial
extra_scripts             = pre:tools/pio/pre_custom_esp82xx.py
                            ${extra_scripts_esp8266.extra_scripts}

[esp8266_custom_common_312]
build_flags               = ${core_stage.build_flags}
platform                  = ${core_stage.platform}
platform_packages         = ${core_stage.platform_packages}
lib_ignore                = ESP32_ping
                            ESP32WebServer
                            ESP32HTTPUpdateServer
                            ServoESP32
                            ${no_ir.lib_ignore}
                            TinyWireM
                            I2C AXP192 Power management
extra_scripts             = pre:tools/pio/pre_custom_esp82xx.py
                            ${extra_scripts_esp8266.extra_scripts}
                            ${core_stage.extra_scripts}


; Custom: 4M1M version --------------------------
[env:custom_274_ESP8266_4M1M]
extends                   = esp8266_4M1M
platform                  = ${esp8266_custom_common_274.platform}
platform_packages         = ${esp8266_custom_common_274.platform_packages}
build_flags               = ${esp8266_custom_common_274.build_flags} 
                            ${esp8266_4M1M.build_flags} 
                            -DPLUGIN_BUILD_CUSTOM
lib_ignore                = ${esp8266_custom_common_274.lib_ignore}
extra_scripts             = ${esp8266_custom_common_274.extra_scripts}

[env:custom_IR_ESP8266_4M1M]
extends                   = esp8266_4M1M
platform                  = ${ir.platform}
platform_packages         = ${ir.platform_packages}
build_flags               = ${ir.build_flags} 
                            ${esp8266_4M1M.build_flags} 
                            -DPLUGIN_BUILD_CUSTOM
                            -DPLUGIN_BUILD_IR
lib_ignore                = ESP32_ping
                            ESP32WebServer
                            ServoESP32
                            ESP32HTTPUpdateServer
                            adafruit/Adafruit GFX Library@^1.11.1
                            LOLIN_EPD
                            Adafruit ILI9341 ESPEasy
                            adafruit/Adafruit BusIO
                            Adafruit NeoPixel
                            Adafruit Motor Shield V2 Library
                            Adafruit_ST77xx
                            Adafruit NeoMatrix
                            I2C AXP192 Power management
                            EspSoftwareSerial
extra_scripts             = pre:tools/pio/pre_custom_esp82xx_IR.py
                            ${extra_scripts_esp8266.extra_scripts}
                            pre:tools/pio/ir_build_check.py



[env:custom_312_ESP8266_4M1M]
extends                   = esp8266_4M1M
platform                  = ${esp8266_custom_common_312.platform}
platform_packages         = ${esp8266_custom_common_312.platform_packages}
build_flags               = ${esp8266_custom_common_312.build_flags}
                            ${esp8266_4M1M.build_flags} 
                            -DPLUGIN_BUILD_CUSTOM
lib_ignore                = ${esp8266_custom_common_312.lib_ignore}
extra_scripts             = ${esp8266_custom_common_312.extra_scripts}


[env:custom_beta_2ndheap_ESP8266_4M1M]
extends                   = esp8266_4M1M
platform                  = ${beta_platform_2ndheap.platform}
platform_packages         = ${beta_platform_2ndheap.platform_packages}
build_flags               = ${beta_platform_2ndheap.build_flags}
                            ${esp8266_4M1M.build_flags}
                            -DPLUGIN_BUILD_CUSTOM
lib_ignore                = ${esp8266_custom_common_312.lib_ignore}
extra_scripts             = ${esp8266_custom_common_312.extra_scripts}


; Custom: 4M2M version -- SPIFFS --------------
[env:custom_312_ESP8266_4M2M]
extends                   = esp8266_4M2M
platform                  = ${esp8266_custom_common_312.platform}
platform_packages         = ${esp8266_custom_common_312.platform_packages}
build_flags               = ${esp8266_custom_common_312.build_flags}
                            ${esp8266_4M1M.build_flags}
                            -DPLUGIN_BUILD_CUSTOM
lib_ignore                = ${esp8266_custom_common_312.lib_ignore}
extra_scripts             = ${esp8266_custom_common_312.extra_scripts}

; Custom: 4M2M version -- LittleFS --------------
; LittleFS is determined by using "LittleFS" in the pio env name
[env:custom_312_ESP8266_4M2M_LittleFS]
extends                   = esp8266_4M2M
platform                  = ${esp8266_custom_common_312.platform}
platform_packages         = ${esp8266_custom_common_312.platform_packages}
build_flags               = ${esp8266_custom_common_312.build_flags}
                            ${esp8266_4M1M.build_flags}
                            -DPLUGIN_BUILD_CUSTOM
lib_ignore                = ${esp8266_custom_common_312.lib_ignore}
extra_scripts             = ${esp8266_custom_common_312.extra_scripts}


; Custom: 1M version --------------------------
[env:custom_274_ESP8266_1M]
extends                   = esp8266_1M
platform                  = ${esp8266_custom_common_274.platform}
platform_packages         = ${esp8266_custom_common_274.platform_packages}
build_flags               = ${esp8266_custom_common_274.build_flags} 
                            ${esp8266_1M.build_flags} 
                            -DPLUGIN_BUILD_CUSTOM
lib_ignore                = ${esp8266_custom_common_274.lib_ignore}
                            ESP8266SdFat
                            SD(esp8266)
                            SD
                            SDFS
                            LittleFS(esp8266)
extra_scripts             = ${esp8266_custom_common_274.extra_scripts}



[env:custom_beta_ESP8266_1M]
extends                   = esp8266_1M
platform                  = ${beta_platform.platform}
platform_packages         = ${beta_platform.platform_packages}
build_flags               = ${beta_platform.build_flags}
                            ${esp8266_1M.build_flags}
                            -DPLUGIN_BUILD_CUSTOM
lib_ignore                = ${esp8266_custom_common_312.lib_ignore}
                            ESP8266SdFat
                            SD(esp8266)
                            SD
                            SDFS
                            LittleFS(esp8266)
extra_scripts             = ${esp8266_custom_common_312.extra_scripts}


; Custom: 2M version --------------------------
[env:custom_274_ESP8266_2M256]
extends                   = espWroom2M256
platform                  = ${esp8266_custom_common_274.platform}
platform_packages         = ${esp8266_custom_common_274.platform_packages}
build_flags               = ${esp8266_custom_common_274.build_flags} 
                            ${espWroom2M256.build_flags} 
                            -DPLUGIN_BUILD_CUSTOM
lib_ignore                = ${esp8266_custom_common_274.lib_ignore}
extra_scripts             = ${esp8266_custom_common_274.extra_scripts}



;;; NORMAL (STABLE) ***************************************************
; normal version with stable plugins                                  ;
; *********************************************************************

; NORMAL: 1024k version --------------------------
[env:normal_ESP8266_1M]
extends                   = esp8266_1M
platform                  = ${normal.platform}
platform_packages         = ${normal.platform_packages}
build_flags               = ${normal.build_flags}
                            ${esp8266_1M.build_flags}
lib_ignore                = ${normal.lib_ignore}


;[env:normal_312_ESP8266_1M]
;extends                   = esp8266_1M
;platform                  = ${core312_platform.platform}
;platform_packages         = ${core312_platform.platform_packages}
;build_flags               = ${core312_platform.build_flags}
;                            ${esp8266_1M.build_flags}


[env:normal_ESP8266_1M_VCC]
extends                   = esp8266_1M
platform                  = ${normal.platform}
platform_packages         = ${normal.platform_packages}
build_flags               = ${normal.build_flags}
                            ${esp8266_1M.build_flags}
                            -D FEATURE_ADC_VCC=1
lib_ignore                = ${normal.lib_ignore}



; NORMAL: 2048k WROOM02 version --------------------------
;[env:normal_WROOM02_2M]
;extends                   = espWroom2M
;platform                  = ${normal.platform}
;platform_packages         = ${normal.platform_packages}
;build_flags               = ${normal.build_flags}
;                            ${espWroom2M.build_flags}


; NORMAL: 2048k WROOM02 version 256k SPIFFS --------------------------
[env:normal_WROOM02_2M256]
extends                   = espWroom2M256
platform                  = ${normal.platform}
platform_packages         = ${normal.platform_packages}
build_flags               = ${normal.build_flags}
                            ${espWroom2M256.build_flags}
lib_ignore                = ${normal.lib_ignore}


; NORMAL: 4096k version --------------------------
[env:normal_ESP8266_4M1M]
extends                   = esp8266_4M1M
platform                  = ${normal.platform}
platform_packages         = ${normal.platform_packages}
build_flags               = ${normal.build_flags}
                            ${esp8266_4M1M.build_flags}
lib_ignore                = ${normal.lib_ignore}

[env:normal_ESP8266_4M1M_VCC]
extends                   = esp8266_4M1M
platform                  = ${normal.platform}
platform_packages         = ${normal.platform_packages}
build_flags               = ${normal.build_flags}
                            ${esp8266_4M1M.build_flags}
                            -D FEATURE_ADC_VCC=1
                            -D NO_LIMIT_BUILD_SIZE
lib_ignore                = ${normal.lib_ignore}


; NORMAL: 16M version --- LittleFS --------------
; LittleFS is determined by using "LittleFS" in the pio env name
[env:normal_beta_ESP8266_16M_LittleFS]
extends                   = esp8266_16M
platform                  = ${normal_beta.platform}
platform_packages         = ${normal_beta.platform_packages}
build_flags               = ${normal_beta.build_flags}
                            ${esp8266_16M.build_flags}
                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22y
lib_ignore                = ESP32_ping
                            ESP32WebServer
                            ESP32HTTPUpdateServer
                            ServoESP32
                            ${no_ir.lib_ignore}
                            TinyWireM
                            ESP8266SdFat
                            SD(esp8266)
                            SD
                            SDFS
                            ArduinoOTA
                            ESP8266mDNS
                            I2C AXP192 Power management



;;; Minimal ***********************************************************
; Minimal build size for OTA                                          ;
; *********************************************************************

[minimal_OTA_domoticz]
build_flags               = ${esp8266_1M_OTA.build_flags}
                            -DFEATURE_DOMOTICZ=1

[minimal_OTA_domoticz_MQTT]
build_flags               = ${esp8266_1M_OTA.build_flags}
                            -DFEATURE_DOMOTICZ=1
                            -DFEATURE_NO_HTTP_CLIENT=1

[minimal_OTA_FHEM_HA]
build_flags               = ${esp8266_1M_OTA.build_flags}
                            -DFEATURE_FHEM=1
                            -DFEATURE_HOMEASSISTANT_OPENHAB=1
                            -DFEATURE_NO_HTTP_CLIENT=1


[env:minimal_core_274_ESP8266_1M_OTA_Domoticz]
extends                   = esp8266_1M_OTA, core274_platform
build_flags               = ${core274_platform.build_flags} 
                            ${minimal_OTA_domoticz.build_flags}
lib_ignore                = ${core274_platform.lib_ignore}
extra_scripts             = ${core274_platform.extra_scripts}
                            ${esp8266_1M_OTA.extra_scripts}


[env:minimal_core_274_ESP8266_1M_OTA_Domoticz_MQTT]
extends                   = esp8266_1M_OTA, core274_platform
build_flags               = ${core274_platform.build_flags} 
                            ${minimal_OTA_domoticz_MQTT.build_flags}
lib_ignore                = ${core274_platform.lib_ignore}
extra_scripts             = ${core274_platform.extra_scripts}
                            ${esp8266_1M_OTA.extra_scripts}


[env:minimal_core_274_ESP8266_1M_OTA_FHEM_HA]
extends                   = esp8266_1M_OTA, core274_platform
build_flags               = ${core274_platform.build_flags} 
                            ${minimal_OTA_FHEM_HA.build_flags}
lib_ignore                = ${core274_platform.lib_ignore}
extra_scripts             = ${core274_platform.extra_scripts}
                            ${esp8266_1M_OTA.extra_scripts}



[env:minimal_core_312_ESP8266_1M_OTA_Domoticz]
extends                   = esp8266_1M_OTA, core312_platform
build_flags               = ${core312_platform.build_flags} 
                            ${minimal_OTA_domoticz.build_flags}
build_unflags             = ${core312_platform.build_unflags}
extra_scripts             = ${core312_platform.extra_scripts}
                            ${esp8266_1M_OTA.extra_scripts}
                            

[env:minimal_core_312_ESP8266_1M_OTA_Domoticz_MQTT]
extends                   = esp8266_1M_OTA, core312_platform
build_flags               = ${core312_platform.build_flags} 
                            ${minimal_OTA_domoticz_MQTT.build_flags}
build_unflags             = ${core312_platform.build_unflags}
extra_scripts             = ${core312_platform.extra_scripts}
                            ${esp8266_1M_OTA.extra_scripts}


[env:minimal_core_312_ESP8266_1M_OTA_FHEM_HA]
extends                   = esp8266_1M_OTA, core312_platform
build_flags               = ${core312_platform.build_flags} 
                            ${minimal_OTA_FHEM_HA.build_flags}
build_unflags             = ${core312_platform.build_unflags}
extra_scripts             = ${core312_platform.extra_scripts}
                            ${esp8266_1M_OTA.extra_scripts}



;;; IR      ***********************************************************
; IR builds                                                           ;
; *********************************************************************


; Minimal IR: 1024k version --------------------------
; Build including IR libraries, including extended AC commands
; Minimal set of other plugins
[env:minimal_IRext_ESP8266_1M]
extends                   = esp8266_1M
platform                  = ${ir.platform}
platform_packages         = ${ir.platform_packages}
lib_ignore                = ${ir.lib_ignore}  
build_flags               = ${minimal_ir_extended.build_flags} 
                            ${esp8266_1M.build_flags}
build_unflags             = ${esp8266_1M_OTA.build_unflags} -DPLUGIN_BUILD_NORMAL_IR
extra_scripts             = ${esp8266_1M.extra_scripts}
                            pre:tools/pio/ir_build_check.py


; Minimal IR: 4096k version --------------------------
; Build including IR libraries, INCLUDING extended AC commands
; Includes Extended IR AC commands (takes a lot more program space)
; 4M flash, 1M SPIFFS
[env:minimal_IRext_ESP8266_4M1M]
extends                   = esp8266_4M1M
platform                  = ${ir.platform}
platform_packages         = ${ir.platform_packages}
lib_ignore                = ${ir.lib_ignore}  
build_flags               = ${minimal_ir_extended.build_flags} 
                            ${esp8266_4M1M.build_flags}
extra_scripts             = ${esp8266_4M1M.extra_scripts}
                            pre:tools/pio/ir_build_check.py

; 4M flash, 2M SPIFFS
[env:minimal_IRext_ESP8266_4M2M]
extends                   = esp8266_4M2M
platform                  = ${ir.platform}
platform_packages         = ${ir.platform_packages}
lib_ignore                = ${ir.lib_ignore}  
build_flags               = ${minimal_ir_extended.build_flags}
                            ${esp8266_4M2M.build_flags}
extra_scripts             = ${esp8266_4M2M.extra_scripts}
                            pre:tools/pio/ir_build_check.py


; NORMAL IR: 4096k version --------------------------
; Build including IR libraries, INCLUDING extended AC commands
; Includes Extended IR AC commands (takes a lot more program space)
; 4M flash, 2M SPIFFS
[env:normal_IRext_no_rx_ESP8266_4M2M]
extends                   = esp8266_4M2M
platform                  = ${ir.platform}
platform_packages         = ${ir.platform_packages}
lib_ignore                = ${ir.lib_ignore}  
build_flags               = ${normal_ir_extended_no_rx.build_flags}
                            ${esp8266_4M2M.build_flags}
                            ${limited_build_size.build_flags}
                            -DLIMIT_BUILD_SIZE
                            -DKEEP_RTTTL
extra_scripts             = ${esp8266_4M2M.extra_scripts}
                            pre:tools/pio/ir_build_check.py



;;; COLLECTION  *********************************************************
; additional plugins (and dependend code) that is grouped as COLLECTION ;
; Includes "normal" + "collection" plugins                              ;
; ***********************************************************************

[collection_ESP8266_4M1M]
extends                   = esp8266_4M1M, collection
build_flags               = ${collection.build_flags}
                            ${esp8266_4M1M.build_flags}
                            ${limited_build_size.build_flags}


[env:collection_A_ESP8266_4M1M]
extends                   = collection_ESP8266_4M1M
build_flags               = ${collection_ESP8266_4M1M.build_flags}
                            -DCOLLECTION_USE_RTTTL

[env:collection_B_ESP8266_4M1M]
extends                   = collection_ESP8266_4M1M
build_flags               = ${collection_ESP8266_4M1M.build_flags}
                            -DPLUGIN_BUILD_COLLECTION_B

[env:collection_C_ESP8266_4M1M]
extends                   = collection_ESP8266_4M1M
build_flags               = ${collection_ESP8266_4M1M.build_flags}
                            -DPLUGIN_BUILD_COLLECTION_C
                            -DCOLLECTION_USE_RTTTL

[env:collection_D_ESP8266_4M1M]
extends                   = collection_ESP8266_4M1M
build_flags               = ${collection_ESP8266_4M1M.build_flags}
                            -DPLUGIN_BUILD_COLLECTION_D
                            -DCOLLECTION_USE_RTTTL

[env:collection_E_ESP8266_4M1M]
extends                   = collection_ESP8266_4M1M
build_flags               = ${collection_ESP8266_4M1M.build_flags}
                            -DPLUGIN_BUILD_COLLECTION_E
                            -DCOLLECTION_USE_RTTTL

[env:collection_F_ESP8266_4M1M]
extends                   = collection_ESP8266_4M1M
build_flags               = ${collection_ESP8266_4M1M.build_flags}
                            -DPLUGIN_BUILD_COLLECTION_F
                            -DCOLLECTION_USE_RTTTL

[env:collection_G_ESP8266_4M1M]
extends                   = collection_ESP8266_4M1M
build_flags               = ${collection_ESP8266_4M1M.build_flags}
                            -DPLUGIN_BUILD_COLLECTION_G
                            -DCOLLECTION_USE_RTTTL


; COLL: 4096k version + FEATURE_ADC_VCC ----------
[env:collection_A_ESP8266_4M1M_VCC]
extends                   = collection_ESP8266_4M1M
build_flags               = ${collection_ESP8266_4M1M.build_flags}
                            -DFEATURE_ADC_VCC=1
                            -DCOLLECTION_USE_RTTTL

[env:collection_B_ESP8266_4M1M_VCC]
extends                   = collection_ESP8266_4M1M
build_flags               = ${collection_ESP8266_4M1M.build_flags}
                            -DFEATURE_ADC_VCC=1
                            -DPLUGIN_BUILD_COLLECTION_B

[env:collection_C_ESP8266_4M1M_VCC]
extends                   = collection_ESP8266_4M1M
build_flags               = ${collection_ESP8266_4M1M.build_flags}
                            -DFEATURE_ADC_VCC=1
                            -DPLUGIN_BUILD_COLLECTION_C
                            -DCOLLECTION_USE_RTTTL

[env:collection_D_ESP8266_4M1M_VCC]
extends                   = collection_ESP8266_4M1M
build_flags               = ${collection_ESP8266_4M1M.build_flags}
                            -DFEATURE_ADC_VCC=1
                            -DPLUGIN_BUILD_COLLECTION_D
                            -DCOLLECTION_USE_RTTTL

[env:collection_E_ESP8266_4M1M_VCC]
extends                   = collection_ESP8266_4M1M
build_flags               = ${collection_ESP8266_4M1M.build_flags}
                            -DFEATURE_ADC_VCC=1
                            -DPLUGIN_BUILD_COLLECTION_E
                            -DCOLLECTION_USE_RTTTL

[env:collection_F_ESP8266_4M1M_VCC]
extends                   = collection_ESP8266_4M1M
build_flags               = ${collection_ESP8266_4M1M.build_flags}
                            -DFEATURE_ADC_VCC=1
                            -DPLUGIN_BUILD_COLLECTION_F
                            -DCOLLECTION_USE_RTTTL

[env:collection_G_ESP8266_4M1M_VCC]
extends                   = collection_ESP8266_4M1M
build_flags               = ${collection_ESP8266_4M1M.build_flags}
                            -DFEATURE_ADC_VCC=1
                            -DPLUGIN_BUILD_COLLECTION_G
                            -DCOLLECTION_USE_RTTTL



;;; Collection builds  ************************************************
; Collection of similar plugins for a specific use case               ;
; for example "Display", "energy meter" or "NeoPixel"                 ;
; *********************************************************************

; energy : 4096k version ----------------------------
[env:energy_ESP8266_4M1M]
extends                   = esp8266_4M1M, regular_platform
build_flags               = ${regular_platform.build_flags}
                            ${esp8266_4M1M.build_flags}
                            -D PLUGIN_ENERGY_COLLECTION
                            -D WEBSERVER_USE_CDN_JS_CSS
lib_ignore                = ${regular_platform.lib_ignore}
                            ESP8266SdFat
                            SD(esp8266)
                            SD
                            SDFS
                            LittleFS(esp8266)


; display : 4096k version ----------------------------
[env:display_ESP8266_4M1M]
extends                   = esp8266_4M1M, regular_platform
build_flags               = ${regular_platform.build_flags}
                            ${esp8266_4M1M.build_flags}
                            -D BUILD_NO_DEBUG
                            -D PLUGIN_DISPLAY_COLLECTION
                            -D WEBSERVER_USE_CDN_JS_CSS
lib_ignore                = ${regular_platform.lib_ignore}
                            ESP8266SdFat
                            SD(esp8266)
                            SD
                            SDFS
                            LittleFS(esp8266)


; climate : 4096k version ----------------------------
[env:climate_ESP8266_4M1M]
extends                   = esp8266_4M1M, regular_platform
build_flags               = ${regular_platform.build_flags}
                            ${esp8266_4M1M.build_flags}
                            -D PLUGIN_CLIMATE_COLLECTION
                            -D KEEP_RTTTL
                            -D WEBSERVER_USE_CDN_JS_CSS
lib_ignore                = ${regular_platform.lib_ignore}
                            ESP8266SdFat
                            SD(esp8266)
                            SD
                            SDFS
                            LittleFS(esp8266)


; neopixel : 4096k version ----------------------------
[env:neopixel_ESP8266_4M1M]
extends                   = esp8266_4M1M, regular_platform
build_flags               = ${regular_platform.build_flags}
                            ${esp8266_4M1M.build_flags}
                            -D PLUGIN_NEOPIXEL_COLLECTION
                            -D LIMIT_BUILD_SIZE
lib_ignore                = ${regular_platform.lib_ignore}
                            ESP8266SdFat
                            SD(esp8266)
                            SD
                            SDFS
                            LittleFS(esp8266)


; neopixel : 1024k version ----------------------------
[env:neopixel_ESP8266_1M_Domoticz]
extends                   = esp8266_1M_OTA, regular_platform
build_flags               = ${regular_platform.build_flags} 
                            ${esp8266_1M_OTA.build_flags}
                            ${minimal_OTA_domoticz.build_flags}
                            -D PLUGIN_NEOPIXEL_COLLECTION
lib_ignore                = ${regular_platform.lib_ignore}
                            ESP8266SdFat
                            SD(esp8266)
                            SD
                            SDFS
                            LittleFS(esp8266)


[env:neopixel_ESP8266_1M_FHEM_HA]
extends                   = esp8266_1M_OTA, regular_platform
build_flags               = ${regular_platform.build_flags} 
                            ${esp8266_1M_OTA.build_flags}
                            ${minimal_OTA_FHEM_HA.build_flags}
                            -D PLUGIN_NEOPIXEL_COLLECTION
lib_ignore                = ${regular_platform.lib_ignore}
                            ESP8266SdFat
                            SD(esp8266)
                            SD
                            SDFS
                            LittleFS(esp8266)



;;; HARDWARE SPECIFIC VERSIONS ***********************************************************
; versions specially designed to fit, and contents only needed plugins for each hardware ;
; ****************************************************************************************

; ITEAD Products

; ITEAD / SONOFF BASIC version ------------------
;[env:hard_SONOFF_BASIC_1M]
;extends                   = esp8266_1M, hard_esp82xx
;platform                  = ${hard_esp82xx.platform}
;platform_packages         = ${hard_esp82xx.platform_packages}
;build_flags               = ${hard_esp82xx.build_flags} ${esp8266_1M.build_flags} -D PLUGIN_SET_SONOFF_BASIC


; ITEAD / SONOFF TH10/TH16 version -------------------
;[env:hard_SONOFF_TH1x_1M]
;extends                   = esp8266_1M, hard_esp82xx
;platform                  = ${hard_esp82xx.platform}
;platform_packages         = ${hard_esp82xx.platform_packages}
;build_flags               = ${hard_esp82xx.build_flags} ${esp8266_1M.build_flags} -D PLUGIN_SET_SONOFF_TH1x

; ITEAD / SONOFF POW & POW R2 version --------------------
; Sonoff Pow (ESP8266 - HLW8012)
; GPIO00 Button
; GPIO05 HLW8012 Sel output
; GPIO12 Red Led and Relay (0 = Off, 1 = On)
; GPIO13 HLW8012 CF1 voltage / current
; GPIO14 HLW8012 CF power
; GPIO15 Blue Led (0 = On, 1 = Off)

; Sonoff Pow R2 (ESP8266 4M flash - CSE7766)
; GPIO00 Button
; GPIO01 Serial RXD 4800 baud 8E1 CSE7766 energy sensor
; GPIO03 Serial TXD
; GPIO12 Red Led and Relay (0 = Off, 1 = On)
; GPIO13 Blue Led (0 = On, 1 = Off)
[env:hard_SONOFF_POW_4M1M]
extends                   = esp8266_4M1M, hard_esp82xx
platform                  = ${hard_esp82xx.platform}
platform_packages         = ${hard_esp82xx.platform_packages}
build_flags               = ${hard_esp82xx.build_flags}
                            ${esp8266_4M1M.build_flags}
                            -DPLUGIN_SET_SONOFF_POW
                            -DFEATURE_IMPROV=0
lib_ignore                = ${hard_esp82xx.lib_ignore}



; Build including power measurement plugins for those devices that have only 1M flash.
; For example those made by BlitzWolf SHP
[env:hard_other_POW_ESP8285_1M]
extends                   = esp8266_1M_OTA, hard_esp82xx
platform                  = ${hard_esp82xx.platform}
platform_packages         = ${hard_esp82xx.platform_packages}
build_flags               = ${hard_esp82xx.build_flags} 
                            ${esp8266_1M_OTA.build_flags}
                            -D PLUGIN_SET_SONOFF_POW
lib_ignore                = ${hard_esp82xx.lib_ignore}


; Shelly1 Open Source (ESP8266-2MB)
; https://shelly.cloud/shelly1-open-source/
; GPIO04 Relay (non inverted)
; GPIO05 Button
[env:hard_Shelly_1_2M256]
extends                   = esp8266_2M256, hard_esp82xx
platform                  = ${hard_esp82xx.platform}
platform_packages         = ${hard_esp82xx.platform_packages}
build_flags               = ${hard_esp82xx.build_flags} 
                            ${esp8266_2M256.build_flags}
                            -D PLUGIN_SET_SHELLY_1
lib_ignore                = ${hard_esp82xx.lib_ignore}


[env:hard_Shelly_PLUG_S_2M256]
extends                   = esp8266_2M256, hard_esp82xx
platform                  = ${hard_esp82xx.platform}
platform_packages         = ${hard_esp82xx.platform_packages}
build_flags               = ${hard_esp82xx.build_flags} 
                            ${esp8266_2M256.build_flags}
                            -D PLUGIN_SET_SHELLY_PLUG_S
lib_ignore                = ${hard_esp82xx.lib_ignore}



; Ventus W266 weather station
; https://www.letscontrolit.com/wiki/index.php/VentusW266
[env:hard_Ventus_W266_1M]
extends                   = esp8266_1M, hard_esp82xx
platform                  = ${hard_esp82xx.platform}
platform_packages         = ${hard_esp82xx.platform_packages}
build_flags               = ${hard_esp82xx.build_flags}
                            ${esp8266_1M_OTA.build_flags}
                            -D PLUGIN_SET_VENTUS_W266
lib_ignore                = ${hard_esp82xx.lib_ignore}


[env:hard_LCtech_relay_x2_1M]
extends                   = esp8266_1M, hard_esp82xx
platform                  = ${hard_esp82xx.platform}
platform_packages         = ${hard_esp82xx.platform_packages}
build_flags               = ${hard_esp82xx.build_flags}
                            ${esp8266_1M.build_flags}
                            -D PLUGIN_SET_LC_TECH_RELAY_X2
lib_ignore                = ${hard_esp82xx.lib_ignore}


