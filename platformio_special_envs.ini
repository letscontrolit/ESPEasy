;Special build environment definitions.
;These are used for analysis and debugging.
;
;!! DO NOT LOAD THESE ONTO A MODULE !!

[debug_pio]
build_type                = debug
;check_tool                = clangtidy
check_tool = pvs-studio
check_flags =
  pvs-studio: --analysis-mode=4 --errors-off=V532,V586,V795,V1042 --lic-file=../pvs_studio.lic
build_flags               = ${compiler_warnings.build_flags}


[env:spec_debug_custom_ESP8266_4M1M]
extends                   = esp8266_4M1M
build_type                = ${debug_pio.build_type}
check_tool                = ${debug_pio.check_tool}
check_flags               = ${debug_pio.check_flags}
platform                  = ${regular_platform.platform}
platform_packages         = ${regular_platform.platform_packages}
build_flags               = ${regular_platform.build_flags}
                            ${debug_pio.build_flags}
                            ${esp8266_4M1M.build_flags}
                            -DPLUGIN_BUILD_CUSTOM
lib_ignore                = ${regular_platform.lib_ignore}
                            IRremoteESP8266
                            HeatpumpIR
                            LittleFS(esp8266)
extra_scripts             = ${extra_scripts_esp8266.extra_scripts}

[env:spec_debug_custom_IR_ESP8266_4M1M]
extends                   = esp8266_4M1M
build_type                = ${debug_pio.build_type}
check_tool                = ${debug_pio.check_tool}
check_flags               = ${debug_pio.check_flags}
platform                  = ${regular_platform.platform}
platform_packages         = ${regular_platform.platform_packages}
build_flags               = ${regular_platform.build_flags}
                            ${debug_pio.build_flags}
                            ${esp8266_4M1M.build_flags}
                            -DPLUGIN_BUILD_CUSTOM
lib_ignore                = ESP32_ping
                            ESP32WebServer
                            ServoESP32
                            ESP32HTTPUpdateServer
                            adafruit/Adafruit GFX Library@^1.11.1
                            LOLIN_EPD
                            Adafruit ILI9341
                            adafruit/Adafruit BusIO
                            Adafruit NeoPixel
                            Adafruit Motor Shield V2 Library
extra_scripts             = ${extra_scripts_esp8266.extra_scripts}


[env:spec_debug_beta_custom_ESP8266_4M1M]
extends                   = esp8266_4M1M
build_type                = ${debug_pio.build_type}
check_tool                = ${debug_pio.check_tool}
check_flags               = ${debug_pio.check_flags}
platform                  = ${beta_platform.platform}
platform_packages         = ${beta_platform.platform_packages}
build_flags               = ${beta_platform.build_flags}
                            ${debug_pio.build_flags}
                            ${esp8266_4M1M.build_flags}
                            -DPLUGIN_BUILD_CUSTOM
lib_ignore                = ${regular_platform.lib_ignore}
                            IRremoteESP8266
                            HeatpumpIR
                            SD(esp8266)
                            SD
                            SDFS
                            LittleFS(esp8266)                           
extra_scripts             = ${extra_scripts_esp8266.extra_scripts}


[env:spec_debug_custom_ESP32_16M8M]
extends                   = esp32_common
build_type                = ${debug_pio.build_type}
check_tool                = ${debug_pio.check_tool}
check_flags               = ${debug_pio.check_flags}
platform                  = ${esp32_common.platform}
build_flags               = ${esp32_common.build_flags} ${debug_pio.build_flags}   -DPLUGIN_BUILD_CUSTOM
board                     = esp32_16M8M
extra_scripts             = ${esp32_common.extra_scripts}
                            pre:tools/pio/pre_custom_esp32.py

[env:spec_debug_max_ESP32_16M8M]
extends                   = esp32_base
build_type                = ${debug_pio.build_type}
check_tool                = ${debug_pio.check_tool}
check_flags               = ${debug_pio.check_flags}
lib_ignore                = ${esp32_always.lib_ignore}
                            ESP32_ping
build_flags               = ${esp32_base.build_flags}
                            ${debug_pio.build_flags}
                            -DUSE_LITTLEFS
                            -DFEATURE_ARDUINO_OTA=1
                            -DPLUGIN_BUILD_MAX_ESP32
                            -DPLUGIN_BUILD_IR_EXTENDED
board_build.filesystem    = littlefs

; TODO: To enable PS-RAM Support needs more build flags than these 2, for now define BOARD_HAS_PSRAM is used to en/disable detecting PS-Ram size on Info page
;                            -DBOARD_HAS_PSRAM // both flags already enabled for Lolin D32 Pro board by PlatformIO
;                            -mfix-esp32-psram-cache-issue
;board                     = lolin_d32_pro
board                     = esp32_16M8M






; Special env for memory analysis
; This may generate builds which cannot be run, so do not upload to a node.
; Has the same lib_ignore as the IR builds, or else those cannot be built for testing
[env:spec_memanalyze_ESP8266]
extends                   = esp8266_4M1M
platform                  = ${regular_platform.platform}
platform_packages         = ${regular_platform.platform_packages}
lib_ignore                = ${regular_platform.lib_ignore}
build_flags               = ${esp8266_4M1M.build_flags} -DMEMORY_ANALYSIS -DPLUGIN_BUILD_CUSTOM -w -DFEATURE_NON_STANDARD_24_TASKS=1 -DTASKS_MAX=24
extra_scripts             = pre:tools/pio/pre_memanalyze.py
                            pre:tools/pio/generate-compiletime-defines.py
