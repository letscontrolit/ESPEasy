.. include:: ../Plugin/_plugin_substitutions_p09x.repl
.. _P093_page:

|P093_typename|
==================================================

|P093_shortinfo|

Plugin details
--------------

Type: |P093_type|

Name: |P093_name|

Status: |P093_status|

GitHub: |P093_github|_

Maintainer: |P093_maintainer|

Used libraries: |P093_usedlibraries|

Plugin is based on `Arduino library to control Mitsubishi Heat Pumps <https://github.com/SwiCago/HeatPump>`_.

Supported hardware
------------------

Plugin should support all Mitsubishi heat pump units with a CN105 connector- git issue, where users can report models they are 
using - `list <https://github.com/SwiCago/HeatPump/issues/13>`_.

How to connect
~~~~~~~~~~~~~~

**Note**: If your unit has cn105 port, it is most likely supported. If your unit has cn100 port, it may work as well.

.. csv-table::
  :header: "CN105", "CN100", "Notes"
  :widths: 10, 10, 60

  "1","NA","12V, can be sourced from pin 3 of cn51 or pin 1 of cn52 (not needed for ESP)"
  "2","8","GND"
  "3","1","5V"
  "4","5","TX"
  "5","4","RX"

.. danger::
  Please make sure to verify voltages!

Parts required to make a CN105 female connector
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* `PAP-05V-S <https://www.digikey.com/product-detail/en/jst-sales-america-inc/PAP-05V-S/455-1489-ND/759977>`_,
* `SPHD-002T-P0.5 <https://www.digikey.com/product-detail/en/jst-sales-america-inc/SPHD-002T-P0.5/455-1313-1-ND/608809>`_,

Example using D1 mini PRO
~~~~~~~~~~~~~~~~~~~~~~~~~

.. image:: P093_1.jpg

There is a good tutorial on how to do `soldering <https://chrdavis.github.io/hacking-a-mitsubishi-heat-pump-Part-1/#soldering>`_ and
`installing <https://chrdavis.github.io/hacking-a-mitsubishi-heat-pump-Part-1/#installing>`_.

Setup
-----

The Mitsubishi Heatpump plugin can be added as simple as selecting it from the list, selecting the serial port used for connection - and we are ready:

.. image:: P093_2.jpg


See: :ref:`SerialHelper_page`


Once we hit submit, the plugin will start sending messages through controller, i.e. MQTT with payload:

``{"roomTemperature":25.5,"wideVane":"|","power":"OFF","mode":"COOL","fan":"AUTO","vane":"AUTO","iSee":true,"operating":true,"compressorFrequency":5,"temperature":24.0}``

Message is send every time a change is detected (i.e. one changes settings using IR remote control) and every X seconds, as set in the settings (60 seconds in above screenshot).

Commands
--------

.. include:: P093_commands.repl

.. Events
.. ~~~~~~

.. This file is missing. (remove up to 'include' when fixed) include:: P093_events.repl

Example
-------

There are several ways how to control AC unit using ESP Easy.

**Using HTTP:**

Generally commands are send via http using syntax ``http://<espeasyip>/control?cmd=<command>`` where ``<espeasyip>`` is the IP of your ESP Easy device, for example ``192.168.0.100``:

.. include:: P093_examples_http.repl

**Using MQTT:**

Commands are send via MQTT using syntax ``<MQTT subscribe template>/cmd`` with payload: ``<command>``. For example, if your `unit name <https://espeasy.readthedocs.io/en/latest/Config/Config.html#unit-name>`_ is ``MyESPEasy``, one would send the below payload to topic ``MyESPEasy/cmd``:

.. include:: P093_examples_mqtt.repl

Please check `here <https://espeasy.readthedocs.io/en/latest/Reference/Command.html>`_ for more details on how to send commands using ESP Easy.

Please `check <https://community.openhab.org/t/mitsubishi-heat-pump/91765>`_ for an example integration with openHAB.

Special thanks
--------------

* to SwiCago and other maintainers and contributors of the *Arduino library to control Mitsubishi Heat Pumps* from https://github.com/SwiCago/HeatPump/,
* to Chris Davis for his great `blog <https://chrdavis.github.io/hacking-a-mitsubishi-heat-pump-Part-1/>`_,
* to Hadley from New Zealand for his *hacking*.
* and all others that contributed on this subject.

Change log
----------

.. versionchanged:: 2021/08/03
  ...

  |added|
  Status of operating and compressor frequency.

.. versionadded:: 2020/03/07
  ...

  |added|
  Initial release version.
